-- Listing for section 3.3.3.
-- This listing can't be compiled.



import Andromeda.Hardware.Device
  ( Device, blankDevice, addSensor, addController)

makeDevice :: Hdl -> Device
makeDevice hdl = makeDevice' hdl blankDevice
  where
    makeDevice' [] d = d
    makeDevice' (c:cs) d    = makeDevice' cs (add' c d)
    add' (Sensor c idx p)   = addSensor idx p c
    add' (Controller c idx) = addController idx c




module Andromeda.Hardware.HDL
  ( module X
  , Component
  , ComponentIndex
  , sensor
  , controller
  ) where

import Andromeda.Hardware.Common as X
  (PhysicalGuid, Parameter, Manufacturer, ComponentName)

import Andromeda.Hardware.HDL.Internal
  (ComponentDef (..), ComponentClass (..))

sensor
  :: PhysicalGuid -> Manufacturer -> ComponentName
  -> ComponentIndex -> Parameter
  -> Component
sensor guid manufacturer name idx param = Sensor
  (ComponentDef Sensors guid manufacturer name)
  idx param

controller
  :: PhysicalGuid -> Manufacturer -> ComponentName
  -> ComponentIndex
  -> Component
controller guid manufacturer name idx = Controller
  (ComponentDef Controllers guid manufacturer name) idx
